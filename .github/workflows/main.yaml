name: CI/CD Resume Generator

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
    - name: Pull Data
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        passphrase: ${{ secrets.PASSPHRASE }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 30m
        script: |
          cd ${{ secrets.NAME }}
          git pull
          cd
          cp ${{ secrets.SECRET_SERVICE}}/.env ${{ secrets.NAME }}/.env

    - name: Remove Old Image And Build New One
      uses: appleboy/ssh-action@v0.1.10
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        passphrase: ${{ secrets.PASSPHRASE }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        command_timeout: 30m
        script: |
          docker stop ${{ secrets.NAME }}
          docker rm ${{ secrets.NAME }}
          docker rmi ${{ secrets.NAME }}
          cd ${{ secrets.NAME }}
          docker build -t ${{ secrets.NAME }} .
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 60
    steps:
      - name: Deploy
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          command_timeout: 30m
          script: |
            cd ${{ secrets.NAME }}
            docker-compose -f ${{ secrets.NAME }}.yaml down -v --remove-orphans
            docker-compose -f ${{ secrets.NAME }}.yaml up -d

      - name: Copy Assets From/To Vault
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          passphrase: ${{ secrets.PASSPHRASE }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          command_timeout: 30m
          script: |
            docker cp ${{ secrets.NAME }}:/app/.next/static $HOME/${{ secrets.VAULT }}/temp/${{ secrets.NAME }}/static
            docker exec ${{ secrets.VAULT }} sh -c 'mkdir -p /app/static-vault/resume/_next'
            docker cp $HOME/${{ secrets.VAULT }}/temp/${{ secrets.NAME }}/static ${{ secrets.VAULT }}:/app/static-vault/resume/_next